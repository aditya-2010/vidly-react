{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination.js","components/common/listGroup.js","components/common/like.js","components/common/tableBody.js","components/common/tableHeader.js","components/common/table.js","components/moviesTable.js","components/Movies.js","components/utils/paginate.js","components/navbar.js","components/customers.js","components/rentals.js","components/common/input.js","components/common/select.js","components/common/form.js","components/movieForm.js","components/notFound.js","components/loginForm.js","components/registerForm.js","app.js","serviceWorker.js","index.js"],"names":["genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","saveMovie","movie","movieInDb","find","m","genresAPI","Date","now","toString","push","Pagination","props","totalItemsCount","itemsCountPerPage","onChange","activePage","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","ListGroup","items","onListChange","selectedItem","textProp","valueProp","defaultProps","Like","liked","classes","aria-hidden","TableBody","data","columns","item","column","path","content","get","renderCell","TableHeader","sortColumn","onSort","filtereColumns","newSortColumn","order","raiseSort","label","renderSortIcon","Table","MoviesTable","onDelete","onLike","style","textDecoration","to","Movies","useState","setMovies","currentPage","setCurrentPage","currentGenre","setCurrentGenre","setSortColumn","filteredMovies","paginatedMovies","pageNumber","pageSize","startIndex","slice","take","value","paginate","orderBy","count","length","newMovies","index","indexOf","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Customers","Rentals","Input","error","rest","htmlFor","Select","i","Form","state","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","this","Component","MovieForm","string","required","number","min","max","match","params","MoviesAPI","history","console","log","onSubmit","renderInput","renderSelect","GenresAPI","renderButton","NotFound","LoginForm","username","password","RegisterForm","email","Fragment","App","component","from","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e74e9d5b.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\r\n\r\nconst movies = [\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471815\",\r\n    title: \"Terminator\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 6,\r\n    dailyRentalRate: 2.5,\r\n    publishDate: \"2018-01-03T19:04:28.809Z\",\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471816\",\r\n    title: \"Die Hard\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 5,\r\n    dailyRentalRate: 2.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471817\",\r\n    title: \"Get Out\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 8,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471819\",\r\n    title: \"Trip to Italy\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\r\n    title: \"Airplane\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\r\n    title: \"Wedding Crashers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\r\n    title: \"Gone Girl\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 4.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\r\n    title: \"The Sixth Sense\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\r\n    numberInStock: 4,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n  {\r\n    _id: \"5b21ca3eeb7f6fbccd471821\",\r\n    title: \"The Avengers\",\r\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\r\n    numberInStock: 7,\r\n    dailyRentalRate: 3.5,\r\n  },\r\n];\r\n\r\nexport function getMovies() {\r\n  return movies;\r\n}\r\n\r\nexport function getMovie(id) {\r\n  return movies.find((m) => m._id === id);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\r\n  movieInDb.title = movie.title;\r\n  movieInDb.genre = genresAPI.genres.find((g) => g.name === movie.genre);\r\n  movieInDb.numberInStock = movie.numberInStock;\r\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\r\n\r\n  if (!movieInDb._id) {\r\n    movieInDb._id = Date.now().toString();\r\n    movies.push(movieInDb);\r\n  }\r\n\r\n  return movieInDb;\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n  let movieInDb = movies.find((m) => m._id === id);\r\n  movies.splice(movies.indexOf(movieInDb), 1);\r\n  return movieInDb;\r\n}\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { totalItemsCount, itemsCountPerPage, onChange, activePage } = props;\r\n\r\n  const pagesCount = Math.ceil(totalItemsCount / itemsCountPerPage);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul className=\"pagination\">\r\n          {pages.map((page) => (\r\n            <li\r\n              key={page}\r\n              className={page === activePage ? \"page-item active\" : \"page-item\"}\r\n            >\r\n              <button\r\n                className=\"page-link clickable\"\r\n                onClick={() => onChange(page)}\r\n              >\r\n                {page}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  totalItemsCount: PropTypes.number.isRequired,\r\n  itemsCountPerPage: PropTypes.number.isRequired,\r\n  activePage: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  onListChange,\r\n  selectedItem,\r\n  textProp,\r\n  valueProp,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group clickable\">\r\n        {items.map((genre) => (\r\n          <li\r\n            key={genre._id}\r\n            onClick={() => onListChange(genre)}\r\n            className={\r\n              genre[valueProp] === selectedItem._id\r\n                ? \"list-group-item active\"\r\n                : \"list-group-item\"\r\n            }\r\n          >\r\n            {genre[textProp]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProp: \"name\",\r\n  valueProp: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!liked) classes += \"-o\";\r\n  return (\r\n    <div className=\"clickable\">\r\n      <i className={classes} aria-hidden=\"true\" onClick={onClick}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {columns.map((column) => (\r\n            <td key={item._id + (column.path || column.key)}>\r\n              {renderCell(item, column)}\r\n            </td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  );\r\n};\r\nexport default TableBody;\r\n","import React from \"react\";\r\n\r\nconst TableHeader = (props) => {\r\n  const { columns, sortColumn, onSort } = props;\r\n\r\n  const raiseSort = (path) => {\r\n    const newSortColumn = { ...sortColumn };\r\n    if (newSortColumn.path === path) {\r\n      newSortColumn.order = newSortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      newSortColumn.path = path;\r\n      newSortColumn.order = \"asc\";\r\n    }\r\n    onSort(newSortColumn);\r\n  };\r\n\r\n  const renderSortIcon = (column) => {\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  const filtereColumns = columns.filter((column) => column.path);\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {filtereColumns.map((column) => (\r\n          <th\r\n            className=\"clickable\"\r\n            key={column.path || column.key}\r\n            onClick={() => raiseSort(column.path)}\r\n          >\r\n            {column.label} {renderSortIcon(column)}\r\n          </th>\r\n        ))}\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nconst Table = ({ data, columns, onSort, sortColumn }) => {\r\n  return (\r\n    <table className=\"table table-borderless\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nconst MoviesTable = ({ movies, onDelete, onLike, sortColumn, onSort }) => {\r\n  const columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link style={{ textDecoration: \"none\" }} to={`/movies/${movie._id}`}>\r\n          {movie.title}\r\n        </Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => onLike(movie)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          onClick={() => onDelete(movie)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      data={movies}\r\n      onSort={onSort}\r\n      sortColumn={sortColumn}\r\n      columns={columns}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MoviesTable;\r\n","import React, { useState } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"./utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Input from \"./common/input\";\r\n\r\nconst Movies = () => {\r\n  const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\r\n  const itemsCountPerPage = 4;\r\n  const [movies, setMovies] = useState(getMovies());\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentGenre, setCurrentGenre] = useState({\r\n    _id: \"\",\r\n    name: \"All Genres\",\r\n  });\r\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\r\n\r\n  const handleDelete = (movie) => {\r\n    let newMovies = movies.filter((m) => m._id !== movie._id);\r\n    setMovies(newMovies);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handleLike = (movie) => {\r\n    const newMovies = [...movies];\r\n    const index = newMovies.indexOf(movie);\r\n    newMovies[index] = { ...newMovies[index] };\r\n    newMovies[index].liked = !newMovies[index].liked;\r\n    setMovies(newMovies);\r\n  };\r\n\r\n  const handleListChange = (genre) => {\r\n    setCurrentGenre(genre);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleSort = (newSortColumn) => {\r\n    setSortColumn(newSortColumn);\r\n  };\r\n\r\n  // filtering movies as per genre name (list group)\r\n  const filteredMovies =\r\n    currentGenre && currentGenre._id\r\n      ? movies.filter((m) => m.genre._id === currentGenre._id)\r\n      : movies;\r\n\r\n  // then soting as per table heading (title, genre.name, ...)\r\n  const sortedMovies = _.orderBy(\r\n    filteredMovies,\r\n    [sortColumn.path],\r\n    [sortColumn.order]\r\n  );\r\n\r\n  // then paginating sorted movies\r\n  const paginatedMovies = paginate(\r\n    sortedMovies,\r\n    currentPage,\r\n    itemsCountPerPage\r\n  );\r\n  // paginated movies is passed to moviesTable\r\n\r\n  let { length: count } = filteredMovies;\r\n  if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n  return (\r\n    <div className=\"movies\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-2 col-md-4\">\r\n          <ListGroup\r\n            items={genres}\r\n            onListChange={handleListChange}\r\n            selectedItem={currentGenre}\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-6 col-md-8\">\r\n          <p>\r\n            <u>Showing {filteredMovies.length} movies in the database.</u>\r\n          </p>\r\n          <Link className=\"btn btn-primary\" to=\"/movie/new\">\r\n            Add New Movie\r\n          </Link>\r\n          {/* <Input name=\"Search\" placeholder=\"Search...\" /> */}\r\n          <MoviesTable\r\n            movies={paginatedMovies}\r\n            sortColumn={sortColumn}\r\n            onDelete={handleDelete}\r\n            onLike={handleLike}\r\n            onSort={handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCountPerPage={itemsCountPerPage}\r\n            totalItemsCount={count}\r\n            activePage={currentPage}\r\n            onChange={handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport const paginate = (items, pageNumber, pageSize) => {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link login\" to=\"/login\">\r\n              Login\r\n            </NavLink>\r\n            <NavLink className=\"nav-item nav-link login\" to=\"/register\">\r\n              Register\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input className=\"form-control\" name={name} {...rest} />\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Select = ({ name, label, items, onChange, value }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select\r\n        className=\"form-select\"\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      >\r\n        {items.map((item, i) => (\r\n          <option key={i} value={item}>\r\n            {item}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nSelect.propTypes = {\r\n  label: PropTypes.string,\r\n  id: PropTypes.string,\r\n  items: PropTypes.array,\r\n};\r\n\r\nexport default Select;\r\n","// To use this component, provide data( {email:\"\", password:\"\"} ) and errors in state\r\n// and define a schema in joi-browser package format\r\n// and define a doSubmit() function to call server\r\n// for input fields refer renderInput method\r\n// for submit button refer renderButton method\r\n\r\nimport React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, items) {\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={this.state.data[name]}\r\n        label={label}\r\n        items={items}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as GenresAPI from \"../services/fakeGenreService\";\r\nimport * as MoviesAPI from \"../services/fakeMovieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genre: \"Action\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genre: Joi.required(),\r\n    numberInStock: Joi.number()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number().min(0).max(5).required().label(\"Rate\"),\r\n  };\r\n\r\n  doSubmit = (e) => {\r\n    // Call the server\r\n    if (this.props.match.params.id)\r\n      this.state.data[\"_id\"] = this.props.match.params.id;\r\n\r\n    MoviesAPI.saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"movie-form\">\r\n        <h1>Movie Form</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"title\", \"Title\")}\r\n              {this.renderSelect(\r\n                \"genre\",\r\n                \"Genre\",\r\n                GenresAPI.getGenres().map((genre) => genre.name)\r\n              )}\r\n              {this.renderInput(\"numberInStock\", \"Number In Stock\")}\r\n              {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n\r\n              {this.renderButton(\"Save\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    // Call the server\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-sm-3\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"username\", \"Username\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Login\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { name: \"\", email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().required().label(\"Name\"),\r\n    email: Joi.string().email().required().label(\"Email\"),\r\n    password: Joi.string().min(5).max(15).required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    console.log(\"Register form submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"text-center\">Register</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 offset-3\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              {this.renderInput(\"name\", \"Name\")}\r\n              {this.renderInput(\"email\", \"Email\", \"email\")}\r\n              {this.renderInput(\"password\", \"Password\", \"password\")}\r\n              {this.renderButton(\"Register\")}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Movies from \"./components/Movies\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport NotFound from \"./components/notFound\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport RegisterForm from \"./components/registerForm\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <NavBar />\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route path=\"/movies/:id\" component={MovieForm} />\r\n          <Route path=\"/movie/new\" component={MovieForm} />\r\n          <Route path=\"/movies\" component={Movies} />\r\n          <Route path=\"/register\" component={RegisterForm} />\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/customers\" component={Customers} />\r\n          <Route path=\"/rentals\" component={Rentals} />\r\n          <Route path=\"/not-found\" component={NotFound} />\r\n          <Redirect from=\"/\" exact to=\"/movies\" />\r\n          <Redirect to=\"/not-found\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./app\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}